generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int                  @id @default(autoincrement())
  name               String
  firstname          String
  email              String               @unique
  password           String
  email_verified_at  DateTime?
  image              String?
  created_at         DateTime             @default(now())
  updated_at         DateTime             @default(now())
  AuthorizationToken AuthorizationToken[]
  PasswordResetToken PasswordResetToken[]
  Account            Account[]
  Setting            Setting[]
  Category           Category[]
  ConfirmationCode   ConfirmationCode[]

  @@map("users")
}

model AuthorizationToken {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  device     String?
  token      String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("authorization_tokens")
}

model PasswordResetToken {
  id         Int      @id @default(autoincrement())
  email      String
  user       User     @relation(fields: [email], references: [email])
  token      String   @unique
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("password_reset_tokens")
}

model Account {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  name       String
  balance    Float    @default(0)
  icon       String?
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("accounts")
}

model Setting {
  id         Int      @id @default(autoincrement())
  user_id    Int      @unique
  user       User     @relation(fields: [user_id], references: [id])
  language   String
  currency   String
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("settings")
}

model Category {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  name       String
  icon       String?
  budget     Float    @default(0)
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("categories")
}

model ConfirmationCode {
  id         Int      @id @default(autoincrement())
  user_id    Int
  user       User     @relation(fields: [user_id], references: [id])
  code       Int
  expires_at DateTime
  created_at DateTime @default(now())
  updated_at DateTime @default(now())

  @@map("confirmation_codes")
}
